@using Blazored.Toast.Configuration
@using ExpenseTracker.Client.Pages
@using ExpenseTracker.Client.ViewModels;
@using ExpressTrackerLogicLayer.Models;
@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager nav
@inject IHomeViewModel _homeViewModel
@inject StateContainerService stateService
@inject CategoiresStateContainerService categoriesStateService
@inject BinTransactionStateContainerService binTransactionStateContainerService
@inject IToastService toastService

<div class="">
    <AuthorizeView>
        <Authorized>
            <NavMenu UserClaims="@context.User.Claims.ToList()" />
            <main>
                <CascadingValue Value="@stateService" Name="StateService">
                    <CascadingValue Value="@categoriesStateService" Name="CategoryStateService">
                        <CascadingValue Value="@binTransactionStateContainerService" Name="BinTransactionStateService">
                            @Body
                        </CascadingValue>
                    </CascadingValue>
                </CascadingValue>

                <MudThemeProvider />
                <MudDialogProvider />
                <MudSnackbarProvider />
            </main>

            <PageFooter />
            <BlazoredToasts Position="ToastPosition.BottomRight"
                            Timeout="10"
                            IconType="IconType.FontAwesome"
                            SuccessClass="success-toast-override"
                            SuccessIcon="fa fa-thumbs-up"
                            ErrorIcon="fa fa-bug"
                            ShowProgressBar="true" />
        </Authorized>
        <Authorizing>
            <div class="vw-100 vh-100 d-flex justify-content-center align-items-center">
                <div class="spinner-border text-primary center" role="status">
                </div>
                <div class="text-primary px-3">Authenticating...</div>
            </div>
        </Authorizing>
        <NotAuthorized>
            <Index />
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {
    protected override async void OnInitialized()
    {
        string token = await localStorage.GetItemAsync<string>("jwt_token");
        if (token == null || token.Length == 0)
        {
            nav.NavigateTo("/login");
            return;
        }
        var user = await _homeViewModel.GetUserByJWT(token);
        if (user == null)
        {
            Console.WriteLine(token);
            toastService.ShowInfo("SessionEnded Please login again!");
            Console.WriteLine("down");
            nav.NavigateTo("/login");
        }
        else
        {
            if (stateService.User == null)
            {
                stateService.SetUser(user);
                var Categories = await _homeViewModel.GetCategories(stateService.User.UserId);
                categoriesStateService.SetCategory(Categories);
                var Transactions = await _homeViewModel.GetTransactions(stateService.User.UserId);
                stateService.SetTransaction(Transactions);
                var BinTransactions = await _homeViewModel.GetBinTransactions(stateService.User.UserId);
                binTransactionStateContainerService.SetTransaction(BinTransactions);
            }
        }

    }


    // rest of the code
}