@page "/registration"
@layout EmptyLayout
@inject NavigationManager nav
@using ExpenseTracker.Client.ViewModels
@inject IRegisterViewModel _registerViewModel
@inject IToastService toastService



<div class="vw-100 vh-100 d-flex justify-content-center align-items-center ">
    <EditForm Model="_registerViewModel" class="vw-25 vh-30  shadow p-5 rounded" OnSubmit="@Register">
        <div class="form-floating mb-3 ">
            <input type="Username" required class="form-control" @bind= "_registerViewModel.Username" @bind:event="onchange" @onblur="IsValidUsername" id="floatingInput" placeholder="Username">
            <label for="floatingInput">Username</label>
        </div>
        <div class="form-floating mb-3">
            <input type="password" required pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                   title="Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters" class="form-control" @bind="_registerViewModel.Password" id="floatingPassword" placeholder="Password">
            <label for="floatingPassword">Password</label>
        </div>
        <div class="form-floating mb-3">
            <input type="password" class="form-control" @bind="_registerViewModel.ConfirmPassword" id="floatingConfirmPassword" placeholder="ConfirmPassword">
            <label for="floatingConfirmPassword">Confirm Password</label>
        </div>
     @*   <div class="form-floating mb-3 ">
            <input type="SecurityQuestion" required class="form-control" @bind="_registerViewModel.SecurityQuestion" id="floatingSecurityQuestion" placeholder="SecurityQuestion">
            <label for="floatingSecurityQuestion">SecurityQuestion</label>
        </div>
        <div class="form-floating mb-3 ">
            <input type="SecurityAnswer" required class="form-control" @bind="_registerViewModel.SecurityAnswer" id="floatingInput" placeholder="SecurityAnswer">
            <label for="floatingSecurityAnswer">SecurityAnswer</label>
        </div>*@
        <button type="submit" class="btn btn-primary" >Register</button>
        <div class="text-center m-3">
            <p>Already had an account? <a @onclick="Login" class="text-primary">Login</a></p>            
        </div>

    </EditForm>
</div>


@code {
    public bool ValidUsername  = false;
    public void Login()
    {
        nav.NavigateTo("/login");   
    }
    public async void Register()
    {
        if(ValidUsername == false)
        {
            toastService.ShowInfo("Username already taken :(");
            return;
        }
        if (_registerViewModel.ComparePassword() == true)
        {
            var response = await _registerViewModel.RegisterUser();
            if (response)
            {
                toastService.ShowSuccess("Registration succesful! please login.");
                nav.NavigateTo("/login");
            }
            else
            {
                toastService.ShowInfo("Registration Unsuccesful! please Try again.");
            }
        }
        else
        {
            toastService.ShowWarning("Passwords did not match");
        }
    }
    public async void IsValidUsername()
    {
        var response = await _registerViewModel.IsValidUsername(_registerViewModel.Username);
        if (response)
        {
            toastService.ShowError("Username already taken :(");
            ValidUsername = false;
        }
        else
        {
            toastService.ShowInfo("Username is Valid!");
            ValidUsername = true;
        }
    }
}
